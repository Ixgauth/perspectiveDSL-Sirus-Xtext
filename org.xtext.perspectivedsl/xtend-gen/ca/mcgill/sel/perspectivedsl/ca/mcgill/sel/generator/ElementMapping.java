package ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.generator;

import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.Perspective;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class ElementMapping {
  public static CharSequence compile(final Perspective perspective) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ca.mcgill.sel.core.perspective.");
    String _lowerCase = perspective.getName().toLowerCase();
    _builder.append(_lowerCase);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import ca.mcgill.sel.core.CORELanguageElement;");
    _builder.newLine();
    _builder.append("import ca.mcgill.sel.core.CORELanguageElementMapping;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* This is a simple class which captures the details of a {@link CORELanguageElementMapping}, which include the mapping");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* type(i.e., the instance of the {@link CORELanguageElementMapping}, from mapped language element (e.g., Class");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* metaclass), and to mapped language element (e.g., Actor metaclass).");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @author Hyacinth Ali");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public class ElementMapping {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("CORELanguageElementMapping mappingType;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("CORELanguageElement fromLanguageElement;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("CORELanguageElement toLanguageElement;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return the mappingType");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public CORELanguageElementMapping getMappingType() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return mappingType;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param mappingType the mappingType to set");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void setMappingType(CORELanguageElementMapping mappingType) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this.mappingType = mappingType;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return the fromLanguageElement");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public CORELanguageElement getFromLanguageElement() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return fromLanguageElement;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param fromLanguageElement the fromLanguageElement to set");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void setFromLanguageElement(CORELanguageElement fromLanguageElement) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this.fromLanguageElement = fromLanguageElement;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return the toLanguageElement");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public CORELanguageElement getToLanguageElement() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return toLanguageElement;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param toLanguageElement the toLanguageElement to set");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void setToLanguageElement(CORELanguageElement toLanguageElement) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this.toLanguageElement = toLanguageElement;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
