/**
 * generated by Xtext 2.22.0
 */
package ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl;

import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.Action;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.IntraLanguageMapping;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.Language;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.LanguageElementMapping;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.Perspective;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.PerspectiveDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Perspective</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getDefault <em>Default</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getDisplayName <em>Display Name</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getLanguages <em>Languages</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getMappings <em>Mappings</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.PerspectiveImpl#getIntralanguagemappings <em>Intralanguagemappings</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PerspectiveImpl extends MinimalEObjectImpl.Container implements Perspective
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDefault() <em>Default</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefault()
   * @generated
   * @ordered
   */
  protected static final String DEFAULT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefault() <em>Default</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefault()
   * @generated
   * @ordered
   */
  protected String default_ = DEFAULT_EDEFAULT;

  /**
   * The default value of the '{@link #getDisplayName() <em>Display Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDisplayName()
   * @generated
   * @ordered
   */
  protected static final String DISPLAY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDisplayName() <em>Display Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDisplayName()
   * @generated
   * @ordered
   */
  protected String displayName = DISPLAY_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLanguages() <em>Languages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguages()
   * @generated
   * @ordered
   */
  protected EList<Language> languages;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<Action> actions;

  /**
   * The cached value of the '{@link #getMappings() <em>Mappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMappings()
   * @generated
   * @ordered
   */
  protected EList<LanguageElementMapping> mappings;

  /**
   * The cached value of the '{@link #getIntralanguagemappings() <em>Intralanguagemappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntralanguagemappings()
   * @generated
   * @ordered
   */
  protected EList<IntraLanguageMapping> intralanguagemappings;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PerspectiveImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PerspectiveDSLPackage.Literals.PERSPECTIVE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.PERSPECTIVE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDefault()
  {
    return default_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefault(String newDefault)
  {
    String oldDefault = default_;
    default_ = newDefault;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.PERSPECTIVE__DEFAULT, oldDefault, default_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDisplayName()
  {
    return displayName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDisplayName(String newDisplayName)
  {
    String oldDisplayName = displayName;
    displayName = newDisplayName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.PERSPECTIVE__DISPLAY_NAME, oldDisplayName, displayName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Language> getLanguages()
  {
    if (languages == null)
    {
      languages = new EObjectContainmentEList<Language>(Language.class, this, PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES);
    }
    return languages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Action> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectContainmentEList<Action>(Action.class, this, PerspectiveDSLPackage.PERSPECTIVE__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LanguageElementMapping> getMappings()
  {
    if (mappings == null)
    {
      mappings = new EObjectContainmentEList<LanguageElementMapping>(LanguageElementMapping.class, this, PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS);
    }
    return mappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IntraLanguageMapping> getIntralanguagemappings()
  {
    if (intralanguagemappings == null)
    {
      intralanguagemappings = new EObjectContainmentEList<IntraLanguageMapping>(IntraLanguageMapping.class, this, PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS);
    }
    return intralanguagemappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES:
        return ((InternalEList<?>)getLanguages()).basicRemove(otherEnd, msgs);
      case PerspectiveDSLPackage.PERSPECTIVE__ACTIONS:
        return ((InternalEList<?>)getActions()).basicRemove(otherEnd, msgs);
      case PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS:
        return ((InternalEList<?>)getMappings()).basicRemove(otherEnd, msgs);
      case PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS:
        return ((InternalEList<?>)getIntralanguagemappings()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.PERSPECTIVE__NAME:
        return getName();
      case PerspectiveDSLPackage.PERSPECTIVE__DEFAULT:
        return getDefault();
      case PerspectiveDSLPackage.PERSPECTIVE__DISPLAY_NAME:
        return getDisplayName();
      case PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES:
        return getLanguages();
      case PerspectiveDSLPackage.PERSPECTIVE__ACTIONS:
        return getActions();
      case PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS:
        return getMappings();
      case PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS:
        return getIntralanguagemappings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.PERSPECTIVE__NAME:
        setName((String)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__DEFAULT:
        setDefault((String)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__DISPLAY_NAME:
        setDisplayName((String)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES:
        getLanguages().clear();
        getLanguages().addAll((Collection<? extends Language>)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends Action>)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS:
        getMappings().clear();
        getMappings().addAll((Collection<? extends LanguageElementMapping>)newValue);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS:
        getIntralanguagemappings().clear();
        getIntralanguagemappings().addAll((Collection<? extends IntraLanguageMapping>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.PERSPECTIVE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__DEFAULT:
        setDefault(DEFAULT_EDEFAULT);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__DISPLAY_NAME:
        setDisplayName(DISPLAY_NAME_EDEFAULT);
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES:
        getLanguages().clear();
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__ACTIONS:
        getActions().clear();
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS:
        getMappings().clear();
        return;
      case PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS:
        getIntralanguagemappings().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.PERSPECTIVE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PerspectiveDSLPackage.PERSPECTIVE__DEFAULT:
        return DEFAULT_EDEFAULT == null ? default_ != null : !DEFAULT_EDEFAULT.equals(default_);
      case PerspectiveDSLPackage.PERSPECTIVE__DISPLAY_NAME:
        return DISPLAY_NAME_EDEFAULT == null ? displayName != null : !DISPLAY_NAME_EDEFAULT.equals(displayName);
      case PerspectiveDSLPackage.PERSPECTIVE__LANGUAGES:
        return languages != null && !languages.isEmpty();
      case PerspectiveDSLPackage.PERSPECTIVE__ACTIONS:
        return actions != null && !actions.isEmpty();
      case PerspectiveDSLPackage.PERSPECTIVE__MAPPINGS:
        return mappings != null && !mappings.isEmpty();
      case PerspectiveDSLPackage.PERSPECTIVE__INTRALANGUAGEMAPPINGS:
        return intralanguagemappings != null && !intralanguagemappings.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", default: ");
    result.append(default_);
    result.append(", displayName: ");
    result.append(displayName);
    result.append(')');
    return result.toString();
  }

} //PerspectiveImpl
