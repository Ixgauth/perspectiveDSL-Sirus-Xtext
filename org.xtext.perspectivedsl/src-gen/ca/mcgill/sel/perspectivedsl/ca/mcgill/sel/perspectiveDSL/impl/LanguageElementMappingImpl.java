/**
 * generated by Xtext 2.22.0
 */
package ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl;

import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.Cardinality;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.InterLanguageMappingEnd;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.LanguageElementMapping;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.NestedMapping;
import ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.PerspectiveDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Language Element Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getFromCardinality <em>From Cardinality</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getToCardinality <em>To Cardinality</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getFromElement <em>From Element</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getFromRoleName <em>From Role Name</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getFromGetElement <em>From Get Element</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getToElement <em>To Element</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getToRoleName <em>To Role Name</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getToGetElement <em>To Get Element</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getNestedMappings <em>Nested Mappings</em>}</li>
 *   <li>{@link ca.mcgill.sel.perspectivedsl.ca.mcgill.sel.perspectiveDSL.impl.LanguageElementMappingImpl#getInterLanguageMappingEnds <em>Inter Language Mapping Ends</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LanguageElementMappingImpl extends MinimalEObjectImpl.Container implements LanguageElementMapping
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getFromCardinality() <em>From Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromCardinality()
   * @generated
   * @ordered
   */
  protected static final Cardinality FROM_CARDINALITY_EDEFAULT = Cardinality.COMPULSORY;

  /**
   * The cached value of the '{@link #getFromCardinality() <em>From Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromCardinality()
   * @generated
   * @ordered
   */
  protected Cardinality fromCardinality = FROM_CARDINALITY_EDEFAULT;

  /**
   * The default value of the '{@link #getToCardinality() <em>To Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToCardinality()
   * @generated
   * @ordered
   */
  protected static final Cardinality TO_CARDINALITY_EDEFAULT = Cardinality.COMPULSORY;

  /**
   * The cached value of the '{@link #getToCardinality() <em>To Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToCardinality()
   * @generated
   * @ordered
   */
  protected Cardinality toCardinality = TO_CARDINALITY_EDEFAULT;

  /**
   * The default value of the '{@link #getFromElement() <em>From Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromElement()
   * @generated
   * @ordered
   */
  protected static final String FROM_ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFromElement() <em>From Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromElement()
   * @generated
   * @ordered
   */
  protected String fromElement = FROM_ELEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getFromRoleName() <em>From Role Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromRoleName()
   * @generated
   * @ordered
   */
  protected static final String FROM_ROLE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFromRoleName() <em>From Role Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromRoleName()
   * @generated
   * @ordered
   */
  protected String fromRoleName = FROM_ROLE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getFromGetElement() <em>From Get Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromGetElement()
   * @generated
   * @ordered
   */
  protected static final String FROM_GET_ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFromGetElement() <em>From Get Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromGetElement()
   * @generated
   * @ordered
   */
  protected String fromGetElement = FROM_GET_ELEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getToElement() <em>To Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToElement()
   * @generated
   * @ordered
   */
  protected static final String TO_ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToElement() <em>To Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToElement()
   * @generated
   * @ordered
   */
  protected String toElement = TO_ELEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getToRoleName() <em>To Role Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToRoleName()
   * @generated
   * @ordered
   */
  protected static final String TO_ROLE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToRoleName() <em>To Role Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToRoleName()
   * @generated
   * @ordered
   */
  protected String toRoleName = TO_ROLE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getToGetElement() <em>To Get Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToGetElement()
   * @generated
   * @ordered
   */
  protected static final String TO_GET_ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToGetElement() <em>To Get Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToGetElement()
   * @generated
   * @ordered
   */
  protected String toGetElement = TO_GET_ELEMENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getNestedMappings() <em>Nested Mappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNestedMappings()
   * @generated
   * @ordered
   */
  protected EList<NestedMapping> nestedMappings;

  /**
   * The cached value of the '{@link #getInterLanguageMappingEnds() <em>Inter Language Mapping Ends</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterLanguageMappingEnds()
   * @generated
   * @ordered
   */
  protected EList<InterLanguageMappingEnd> interLanguageMappingEnds;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LanguageElementMappingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PerspectiveDSLPackage.Literals.LANGUAGE_ELEMENT_MAPPING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cardinality getFromCardinality()
  {
    return fromCardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromCardinality(Cardinality newFromCardinality)
  {
    Cardinality oldFromCardinality = fromCardinality;
    fromCardinality = newFromCardinality == null ? FROM_CARDINALITY_EDEFAULT : newFromCardinality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_CARDINALITY, oldFromCardinality, fromCardinality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cardinality getToCardinality()
  {
    return toCardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToCardinality(Cardinality newToCardinality)
  {
    Cardinality oldToCardinality = toCardinality;
    toCardinality = newToCardinality == null ? TO_CARDINALITY_EDEFAULT : newToCardinality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_CARDINALITY, oldToCardinality, toCardinality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFromElement()
  {
    return fromElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromElement(String newFromElement)
  {
    String oldFromElement = fromElement;
    fromElement = newFromElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ELEMENT, oldFromElement, fromElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFromRoleName()
  {
    return fromRoleName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromRoleName(String newFromRoleName)
  {
    String oldFromRoleName = fromRoleName;
    fromRoleName = newFromRoleName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ROLE_NAME, oldFromRoleName, fromRoleName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFromGetElement()
  {
    return fromGetElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromGetElement(String newFromGetElement)
  {
    String oldFromGetElement = fromGetElement;
    fromGetElement = newFromGetElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_GET_ELEMENT, oldFromGetElement, fromGetElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getToElement()
  {
    return toElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToElement(String newToElement)
  {
    String oldToElement = toElement;
    toElement = newToElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ELEMENT, oldToElement, toElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getToRoleName()
  {
    return toRoleName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToRoleName(String newToRoleName)
  {
    String oldToRoleName = toRoleName;
    toRoleName = newToRoleName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ROLE_NAME, oldToRoleName, toRoleName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getToGetElement()
  {
    return toGetElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToGetElement(String newToGetElement)
  {
    String oldToGetElement = toGetElement;
    toGetElement = newToGetElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_GET_ELEMENT, oldToGetElement, toGetElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<NestedMapping> getNestedMappings()
  {
    if (nestedMappings == null)
    {
      nestedMappings = new EObjectContainmentEList<NestedMapping>(NestedMapping.class, this, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS);
    }
    return nestedMappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InterLanguageMappingEnd> getInterLanguageMappingEnds()
  {
    if (interLanguageMappingEnds == null)
    {
      interLanguageMappingEnds = new EObjectContainmentEList<InterLanguageMappingEnd>(InterLanguageMappingEnd.class, this, PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS);
    }
    return interLanguageMappingEnds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS:
        return ((InternalEList<?>)getNestedMappings()).basicRemove(otherEnd, msgs);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS:
        return ((InternalEList<?>)getInterLanguageMappingEnds()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NAME:
        return getName();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_CARDINALITY:
        return getFromCardinality();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_CARDINALITY:
        return getToCardinality();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ELEMENT:
        return getFromElement();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ROLE_NAME:
        return getFromRoleName();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_GET_ELEMENT:
        return getFromGetElement();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ELEMENT:
        return getToElement();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ROLE_NAME:
        return getToRoleName();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_GET_ELEMENT:
        return getToGetElement();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS:
        return getNestedMappings();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS:
        return getInterLanguageMappingEnds();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NAME:
        setName((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_CARDINALITY:
        setFromCardinality((Cardinality)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_CARDINALITY:
        setToCardinality((Cardinality)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ELEMENT:
        setFromElement((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ROLE_NAME:
        setFromRoleName((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_GET_ELEMENT:
        setFromGetElement((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ELEMENT:
        setToElement((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ROLE_NAME:
        setToRoleName((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_GET_ELEMENT:
        setToGetElement((String)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS:
        getNestedMappings().clear();
        getNestedMappings().addAll((Collection<? extends NestedMapping>)newValue);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS:
        getInterLanguageMappingEnds().clear();
        getInterLanguageMappingEnds().addAll((Collection<? extends InterLanguageMappingEnd>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_CARDINALITY:
        setFromCardinality(FROM_CARDINALITY_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_CARDINALITY:
        setToCardinality(TO_CARDINALITY_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ELEMENT:
        setFromElement(FROM_ELEMENT_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ROLE_NAME:
        setFromRoleName(FROM_ROLE_NAME_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_GET_ELEMENT:
        setFromGetElement(FROM_GET_ELEMENT_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ELEMENT:
        setToElement(TO_ELEMENT_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ROLE_NAME:
        setToRoleName(TO_ROLE_NAME_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_GET_ELEMENT:
        setToGetElement(TO_GET_ELEMENT_EDEFAULT);
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS:
        getNestedMappings().clear();
        return;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS:
        getInterLanguageMappingEnds().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_CARDINALITY:
        return fromCardinality != FROM_CARDINALITY_EDEFAULT;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_CARDINALITY:
        return toCardinality != TO_CARDINALITY_EDEFAULT;
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ELEMENT:
        return FROM_ELEMENT_EDEFAULT == null ? fromElement != null : !FROM_ELEMENT_EDEFAULT.equals(fromElement);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_ROLE_NAME:
        return FROM_ROLE_NAME_EDEFAULT == null ? fromRoleName != null : !FROM_ROLE_NAME_EDEFAULT.equals(fromRoleName);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__FROM_GET_ELEMENT:
        return FROM_GET_ELEMENT_EDEFAULT == null ? fromGetElement != null : !FROM_GET_ELEMENT_EDEFAULT.equals(fromGetElement);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ELEMENT:
        return TO_ELEMENT_EDEFAULT == null ? toElement != null : !TO_ELEMENT_EDEFAULT.equals(toElement);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_ROLE_NAME:
        return TO_ROLE_NAME_EDEFAULT == null ? toRoleName != null : !TO_ROLE_NAME_EDEFAULT.equals(toRoleName);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__TO_GET_ELEMENT:
        return TO_GET_ELEMENT_EDEFAULT == null ? toGetElement != null : !TO_GET_ELEMENT_EDEFAULT.equals(toGetElement);
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__NESTED_MAPPINGS:
        return nestedMappings != null && !nestedMappings.isEmpty();
      case PerspectiveDSLPackage.LANGUAGE_ELEMENT_MAPPING__INTER_LANGUAGE_MAPPING_ENDS:
        return interLanguageMappingEnds != null && !interLanguageMappingEnds.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", fromCardinality: ");
    result.append(fromCardinality);
    result.append(", toCardinality: ");
    result.append(toCardinality);
    result.append(", fromElement: ");
    result.append(fromElement);
    result.append(", fromRoleName: ");
    result.append(fromRoleName);
    result.append(", fromGetElement: ");
    result.append(fromGetElement);
    result.append(", toElement: ");
    result.append(toElement);
    result.append(", toRoleName: ");
    result.append(toRoleName);
    result.append(", toGetElement: ");
    result.append(toGetElement);
    result.append(')');
    return result.toString();
  }

} //LanguageElementMappingImpl
